import threading
import time
import random
import datetime
from Characterization.Environment import env
from util.DataFrame import globalFrame
from AutomatedApplication.application.labApplication import *

random_device_list = [
    [deviceOn, ["Lab", "Curtain"]],
    [deviceOff, ["Lab", "Curtain"]],
    [deviceOn, ["Lab", "Door"]],
    [deviceOff, ["Lab", "Door"]],
    [deviceOn, ["Lab", "AC"]],
    [deviceOff, ["Lab", "AC"]],
    [deviceOn, ["Lab", "Printer"]],
    [deviceOn, ["Lab", "AirPurifier"]],
    [deviceOff, ["Lab", "AirPurifier"]],
    [deviceOn, ["Lab", "Light"]],
    [deviceOn, ["Lab", "Humidifier"]],
    [deviceOff, ["Lab", "Humidifier"]],
    [deviceOn, ["Lab", "Window"]],
    [deviceOff, ["Lab", "Window"]]],
    
random_event_list = [CatchWater, GoRestRoom, HaveLunch, Reservation]


def test():
    random_device = random.randint(0, len(random_device_list)-1)
    t2 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t2.start()
    

def personOne():
    time.sleep(random.uniform(0.6*60*8.5, 0.6*60*9.2))
    print("人员一到...")
    sign_in = threading.Thread(target=SignIn)
    sign_in.start()
    sign_in.join()
    time.sleep(random.uniform(0.03, 0.05))
    check_in = threading.Thread(target=CheckIn)
    check_in.start()
    check_in.join()
    time.sleep(random.uniform(0.03, 0.05))
    t1 = threading.Thread(target=deviceOn, args=("Lab", "Humidifier", env, 'User Activity',))
    t1.start()
    time.sleep(random.uniform(0.6, 5*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t2 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t2.start()
    time.sleep(random.uniform(0.6, 5*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t3 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t3.start()
    print("人员一工作ing...")
    time.sleep(random.uniform(60*0.6, 80*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t4 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t4.start()
    print("人员一继续工作ing...")
    time.sleep(random.uniform(60*0.6, 90*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员一继续工作ing...")
    time.sleep(random.uniform(10*0.6, 20*0.6))
    if random.randint(0, 1) == 0:
        have_lunch = threading.Thread(target=HaveLunch)
        have_lunch.start()
        have_lunch.join()
        print("人员一午休ing...")
        time.sleep(random.uniform(90*0.6, 120*0.6))
    else:
        sign_out = threading.Thread(target=SignOut)
        sign_out.start()
        sign_out.join()
        t = random.uniform(10*0.6, 120*0.6)
        time.sleep(t)
        sign_in = threading.Thread(target=SignIn)
        sign_in.start()
        sign_in.join()
        if t < 65*0.6:
            time.sleep(random.uniform((70-t)*0.6, (110-t)*0.6))
    time.sleep(random.uniform(1*0.6, 3*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员一继续工作ing...")
    time.sleep(random.uniform(90*0.6, 120*0.6))
    meeting = threading.Thread(target=Meeting, args=("MeetingRoomOne",))
    meeting.start()
    meeting.join()
    print("人员一继续工作ing...")
    time.sleep(random.uniform(50*0.6, 90*0.6))
    if random.randint(0, 1) == 0:
        sign_out = threading.Thread(target=SignOut)
        sign_out.start()
        sign_out.join()
        time.sleep(random.uniform(5*0.6, 20*0.6))
        sign_in = threading.Thread(target=SignIn)
        sign_in.start()
        sign_in.join()
    time.sleep(random.uniform(5*0.6, 20*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员一继续工作ing...")
    time.sleep(random.uniform(100*0.6, 130*0.6))
    t5 = threading.Thread(target=deviceOff, args=("Lab", "AC", env, 'User Activity',))
    t5.start()
    print("人员一签退...")
    print(datetime.datetime.fromtimestamp(globalFrame.start_time))
    sign_out = threading.Thread(target=SignOut)
    sign_out.start()
    sign_out.join()
    t1.join()
    t2.join()
    t3.join()
    t4.join()
    t5.join()
 

def personTwo():
    pool = []
    time.sleep(random.uniform(0.6*60*8.8, 0.6*60*9))
    print("人员二到...")
    sign_in = threading.Thread(target=SignIn)
    sign_in.start()
    sign_in.join()
    time.sleep(random.uniform(0.03, 0.05))
    check_in = threading.Thread(target=CheckIn)
    check_in.start()
    check_in.join()
    time.sleep(random.uniform(0.6, 0.6*2))
    random_device = random.randint(0, len(random_device_list)-1)
    t1 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t1.start()
    print("人员二工作ing...")
    time.sleep(random.uniform(30*0.6, 60*0.6))
    t2 = threading.Thread(target=deviceOn, args=("Lab", "Printer", env, 'User Activity',))
    t2.start()
    print("人员二继续工作ing...")
    time.sleep(random.uniform(60*0.6, 90*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    room = ['MeetingRoomOne', 'MeetingRoomTwo']
    if event_index == 3:
        start_time = random.uniform(40*0.6, 90*0.6)
        random_event = threading.Thread(target=random_event_list[event_index], args=(start_time, room[random.randint(0, 1)],))
        random_event.start()
        pool.append(random_event)
        if random.randint(0, 50) < 40: 
            time.sleep(start_time - 10*0.6)
            meeting = threading.Thread(target=Meeting, args=(room, ))
            meeting.start()
            meeting.join()
    else:
        time.sleep(random.uniform(60*0.6, 120*0.6))
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员二午休ing...")
    time.sleep(random.uniform(1*0.6, 3*0.6))
    if random.randint(0, 2) == 0:
        have_lunch = threading.Thread(target=HaveLunch)
        have_lunch.start()
        have_lunch.join()
        print("人员一午休ing...")
        time.sleep(random.uniform(60*0.6, 90*0.6))
    else:
        sign_out = threading.Thread(target=SignOut)
        sign_out.start()
        sign_out.join()
        t = random.uniform(10*0.6, 90*0.6)
        time.sleep(t)
        sign_in = threading.Thread(target=SignIn)
        sign_in.start()
        sign_in.join()
        if t < 55*0.6:
            time.sleep(random.uniform((60-t)*0.6, (90-t)*0.6))
    time.sleep(random.uniform(1*0.6, 3*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t3 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t3.start()
    print("人员二继续工作ing...")
    time.sleep(random.uniform(30*0.6, 60*0.6))
    catch_water = threading.Thread(target=CatchWater)
    catch_water.start()
    catch_water.join()
    time.sleep(random.uniform(0.6, 0.6*2))
    meeting = threading.Thread(target=Meeting, args=("MeetingRoomOne",))
    meeting.start()
    meeting.join()
    print("人员二继续工作ing...")
    time.sleep(random.uniform(120*0.6, 150*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员二继续工作ing...")
    time.sleep(random.uniform(90*0.6, 120*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t4 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t4.start()
    time.sleep(random.uniform(0.6*30, 0.6*45))
    t5 = threading.Thread(target=deviceOff, args=("Lab", "Window", env, 'User Activity',))
    t5.start()
    print("人员二签退...")
    print(datetime.datetime.fromtimestamp(globalFrame.start_time))
    sign_out = threading.Thread(target=SignOut)
    sign_out.start()
    sign_out.join()
    t1.join()
    t2.join()
    t3.join()
    t4.join()
    t5.join()
    
    for item in pool:
        item.join()


def personThree():
    pool = []
    time.sleep(random.uniform(0.6*60*8, 0.6*60*9))
    print("人员三到...")
    sign_in = threading.Thread(target=SignIn)
    sign_in.start()
    sign_in.join()
    time.sleep(random.uniform(0.03, 0.05))
    check_in = threading.Thread(target=CheckIn)
    check_in.start()
    check_in.join()
    time.sleep(random.uniform(0.6, 0.6*2))
    random_device = random.randint(0, len(random_device_list)-1)
    t1 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t1.start()
    print("人员三工作ing...")
    time.sleep(random.uniform(90*0.6, 110*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员三继续工作ing...")
    time.sleep(random.uniform(30*0.6, 60*0.6))
    rest_room = threading.Thread(target=GoRestRoom)
    rest_room.start()
    rest_room.join()
    print("人员三继续工作ing...")
    time.sleep(random.uniform(80*0.6, 100*0.6))
    have_lunch = threading.Thread(target=HaveLunch)
    have_lunch.start()
    have_lunch.join()
    print("人员三午休ing...")
    time.sleep(random.uniform(80*0.6, 100*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t2 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t2.start()
    time.sleep(random.uniform(15*0.6, 30*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    room = ['MeetingRoomOne', 'MeetingRoomTwo']
    if event_index == 3:
        start_time = random.uniform(40*0.6, 90*0.6)
        random_event = threading.Thread(target=random_event_list[event_index], args=(start_time, room[random.randint(0, 1)],))
        random_event.start()
        pool.append(random_event)
        if random.randint(0, 50) < 40: 
            time.sleep(start_time - 10*0.6)
            meeting = threading.Thread(target=Meeting, args=(room, ))
            meeting.start()
            meeting.join()
    else:
        time.sleep(random.uniform(40*0.6, 100*0.6))
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员三继续工作ing...")
    time.sleep(random.uniform(120*0.6, 150*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    time.sleep(random.uniform(5*0.6, 15*0.6))
    if random.randint(0, 1) == 0:
        sign_out = threading.Thread(target=SignOut)
        sign_out.start()
        sign_out.join()
        t = random.uniform(20*0.6, 50*0.6)
        time.sleep(t)
        sign_in = threading.Thread(target=SignIn)
        sign_in.start()
        sign_in.join()
        time.sleep(random.uniform(5*0.6, 15*0.6))
    else:
        print("人员三继续工作ing...")
        time.sleep(random.uniform(30*0.6, 60*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t3 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t3.start()
    time.sleep(random.uniform(0.6, 0.6*2))
    t4 = threading.Thread(target=deviceOn, args=("Lab", "Printer", env, 'User Activity',))
    t4.start()
    print("人员三继续工作ing...")
    time.sleep(random.uniform(15*0.6, 30*0.6))
    print("人员三签退...")
    print(datetime.datetime.fromtimestamp(globalFrame.start_time))
    sign_out = threading.Thread(target=SignOut)
    sign_out.start()
    sign_out.join()
    t1.join()
    t2.join()
    t3.join()
    t4.join()
    for item in pool:
        item.join()


def personFour():
    pool = []
    time.sleep(random.uniform(0.6*60*8.3, 0.6*60*9.1))
    print("人员四到...")
    sign_in = threading.Thread(target=SignIn)
    sign_in.start()
    sign_in.join()
    time.sleep(random.uniform(0.03, 0.05))
    check_in = threading.Thread(target=CheckIn)
    check_in.start()
    check_in.join()
    time.sleep(random.uniform(0.6, 0.6*2))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员四工作ing...")
    time.sleep(random.uniform(90*0.6, 150*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t1 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t1.start()
    time.sleep(random.uniform(0.6, 0.6*2))
    event_index = random.randint(0, len(random_event_list)-1)
    room = ['MeetingRoomOne', 'MeetingRoomTwo']
    if event_index == 3:
        start_time = random.uniform(40*0.6, 90*0.6)
        random_event = threading.Thread(target=random_event_list[event_index], args=(start_time, room[random.randint(0, 1)],))
        random_event.start()
        pool.append(random_event)
        if random.randint(0, 50) < 40: 
            time.sleep(start_time - 10*0.6)
            meeting = threading.Thread(target=Meeting, args=(room, ))
            meeting.start()
            meeting.join()
    else:
        time.sleep(random.uniform(50*0.6, 110*0.6))
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员四继续工作ing...")
    time.sleep(random.uniform(40*0.6, 70*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t2 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t2.start()
    print("人员四午休ing...")
    time.sleep(random.uniform(5*0.6, 15*0.6))
    if random.randint(0, 1) == 0:
        sign_out = threading.Thread(target=SignOut)
        sign_out.start()
        sign_out.join()
        t = random.uniform(20*0.6, 50*0.6)
        time.sleep(t)
        sign_in = threading.Thread(target=SignIn)
        sign_in.start()
        sign_in.join()
        time.sleep(random.uniform(30*0.6, 40*0.6))
    else:
        time.sleep(random.uniform(50*0.6, 100*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t3 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t3.start()
    print("人员四继续工作ing...")
    time.sleep(random.uniform(30*0.6, 60*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t4 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t4.start()
    print("人员四继续工作ing...")
    time.sleep(random.uniform(120*0.6, 180*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    time.sleep(random.uniform(5*0.6, 15*0.6))
    if random.randint(0, 1) == 0:
        sign_out = threading.Thread(target=SignOut)
        sign_out.start()
        sign_out.join()
        t = random.uniform(20*0.6, 40*0.6)
        time.sleep(t)
        sign_in = threading.Thread(target=SignIn)
        sign_in.start()
        sign_in.join()
        time.sleep(random.uniform(5*0.6, 15*0.6))
    else:
        time.sleep(random.uniform(30*0.6, 60*0.6))
    time.sleep(random.uniform(0.6, 0.6*2))
    t5 = threading.Thread(target=deviceOn, args=("Lab", "Light", env, 'User Activity',))
    t5.start()
    print("人员四继续工作ing...")
    time.sleep(random.uniform(40*0.6, 60*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t6 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t6.start()
    print("人员四签退...")
    print(datetime.datetime.fromtimestamp(globalFrame.start_time))
    sign_out = threading.Thread(target=SignOut)
    sign_out.start()
    sign_out.join()

    t1.join()
    t2.join()
    t3.join()
    t4.join()
    t5.join()
    t6.join()
    for item in pool:
        item.join()


def personFive():
    pool = []
    time.sleep(random.uniform(0.6*60*8.5, 0.6*60*8.9))
    print("人员五到...")
    sign_in = threading.Thread(target=SignIn)
    sign_in.start()
    sign_in.join()
    time.sleep(random.uniform(0.03, 0.05))
    check_in = threading.Thread(target=CheckIn)
    check_in.start()
    check_in.join()
    time.sleep(random.uniform(0.6*5, 0.6*15))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    time.sleep(random.uniform(0.6*2, 0.6*15))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员五工作ing...")
    time.sleep(random.uniform(60*0.6, 90*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t1 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t1.start()
    time.sleep(random.uniform(0.6*8, 0.6*15))
    meeting = threading.Thread(target=Meeting, args=("MeetingRoomOne",))
    meeting.start()
    meeting.join()
    print("人员五午休ing...")
    time.sleep(random.uniform(5*0.6, 15*0.6))
    if random.randint(0, 1) == 0:
        sign_out = threading.Thread(target=SignOut)
        sign_out.start()
        sign_out.join()
        t = random.uniform(20*0.6, 50*0.6)
        time.sleep(t)
        sign_in = threading.Thread(target=SignIn)
        sign_in.start()
        sign_in.join()
        time.sleep(random.uniform(60*0.6, 80*0.6))
    else:
        t_window = threading.Thread(target=deviceOn, args=("Lab", "Window", env, 'User Activity',))
        t_window.start()
        pool.append(t_window)
        time.sleep(random.uniform(90*0.6, 110*0.6))
    t2 = threading.Thread(target=deviceOn, args=("Lab", "Printer", env, 'User Activity',))
    t2.start()
    print("人员五继续工作ing...")
    time.sleep(random.uniform(90*0.6, 110*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    time.sleep(random.uniform(0.6*3, 0.6*15))
    random_device = random.randint(0, len(random_device_list)-1)
    t3 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t3.start()
    print("人员五继续工作ing...")
    time.sleep(random.uniform(90*0.6, 100*0.6))
    t4 = threading.Thread(target=deviceOff, args=("Lab", "Curtain", env, 'User Activity',))
    t4.start()
    print("人员五继续工作ing...")
    time.sleep(random.uniform(60*0.6, 80*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    time.sleep(random.uniform(0.6*8, 0.6*15))
    meeting = threading.Thread(target=Meeting, args=("MeetingRoomTwo",))
    meeting.start()
    meeting.join()
    time.sleep(random.uniform(0.6*8, 0.6*15))
    event_index = random.randint(0, len(random_event_list)-1)
    room = ['MeetingRoomOne', 'MeetingRoomTwo']
    if event_index == 3:
        start_time = random.uniform(40*0.6, 90*0.6)
        random_event = threading.Thread(target=random_event_list[event_index], args=(start_time, room[random.randint(0, 1)],))
        random_event.start()
        pool.append(random_event)
        if random.randint(0, 50) < 40: 
            time.sleep(start_time - 10*0.6)
            meeting = threading.Thread(target=Meeting, args=(room, ))
            meeting.start()
            meeting.join()
    else:
        time.sleep(random.uniform(40*0.6, 70*0.6))
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员五继续工作ing...")
    time.sleep(random.uniform(40*0.6, 50*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    time.sleep(random.uniform(0.6*8, 0.6*15))
    print("人员五签退...")
    print(datetime.datetime.fromtimestamp(globalFrame.start_time))
    sign_out = threading.Thread(target=SignOut)
    sign_out.start()
    sign_out.join()

    t1.join()
    t2.join()
    t3.join()
    t4.join()
    for item in pool:
        item.join()


def personSix():
    pool = []
    time.sleep(random.uniform(0.6*60*8.6, 0.6*60*9.1))
    print("人员六到...")
    sign_in = threading.Thread(target=SignIn)
    sign_in.start()
    sign_in.join()
    time.sleep(random.uniform(0.03, 0.05))
    check_in = threading.Thread(target=CheckIn)
    check_in.start()
    check_in.join()
    time.sleep(random.uniform(0.6, 0.6*15))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员六工作ing...")
    time.sleep(random.uniform(60*0.6, 90*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t1 = threading.Thread(target=deviceOn, args=("Lab", "Humidifier", env, 'User Activity',))
    t1.start()
    time.sleep(random.uniform(90*0.6, 120*0.6))
    meeting = threading.Thread(target=Meeting, args=("MeetingRoomTwo",))
    meeting.start()
    meeting.join()
    print("人员六午休ing...")
    time.sleep(random.uniform(90*0.6, 120*0.6))
    t2 = threading.Thread(target=deviceOn, args=("Lab", "AC", env, 'User Activity',))
    t2.start()
    print("人员六继续工作ing...")
    time.sleep(random.uniform(30*0.6, 60*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    room = ['MeetingRoomOne', 'MeetingRoomTwo']
    if event_index == 3:
        start_time = random.uniform(40*0.6, 90*0.6)
        random_event = threading.Thread(target=random_event_list[event_index], args=(start_time, room[random.randint(0, 1)],))
        random_event.start()
        pool.append(random_event)
        if random.randint(0, 50) < 40: 
            time.sleep(start_time - 10*0.6)
            meeting = threading.Thread(target=Meeting, args=(room, ))
            meeting.start()
            meeting.join()
    else:
        time.sleep(random.uniform(60*0.6, 110*0.6))
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    time.sleep(random.uniform(0.6, 0.6*15))
    random_device = random.randint(0, len(random_device_list)-1)
    t3 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t3.start()
    print("人员六继续工作ing...")
    time.sleep(random.uniform(5*0.6, 15*0.6))
    if random.randint(0, 1) == 0:
        sign_out = threading.Thread(target=SignOut)
        sign_out.start()
        sign_out.join()
        t = random.uniform(20*0.6, 50*0.6)
        time.sleep(t)
        sign_in = threading.Thread(target=SignIn)
        sign_in.start()
        sign_in.join()
    else:
        time.sleep(random.uniform(20*0.6, 40*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t4 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t4.start()
    time.sleep(random.uniform(0.6, 0.6*15))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员六继续工作ing...")
    time.sleep(random.uniform(120*0.6, 150*0.6))
    print("人员六签退...")
    print(datetime.datetime.fromtimestamp(globalFrame.start_time))
    sign_out = threading.Thread(target=SignOut)
    sign_out.start()
    sign_out.join()

    t1.join()
    t2.join()
    t3.join()
    t4.join()
    for item in pool:
        item.join()


def personSeven():
    time.sleep(random.uniform(0.6*60*8, 0.6*60*9))
    print("人员七到...")
    sign_in = threading.Thread(target=SignIn)
    sign_in.start()
    sign_in.join()
    time.sleep(random.uniform(0.03, 0.05))
    check_in = threading.Thread(target=CheckIn)
    check_in.start()
    check_in.join()
    time.sleep(random.uniform(0.6, 0.6*15))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员七工作ing...")
    time.sleep(random.uniform(60*0.6, 120*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t1 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t1.start()
    time.sleep(random.uniform(60*0.6, 120*0.6))
    meeting = threading.Thread(target=Meeting, args=("MeetingRoomOne",))
    meeting.start()
    meeting.join()

    time.sleep(random.uniform(60*0.6, 120*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t2 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t2.start()
    print("人员七午休ing...")
    time.sleep(random.uniform(5*0.6, 15*0.6))
    if random.randint(0, 1) == 0:
        sign_out = threading.Thread(target=SignOut)
        sign_out.start()
        sign_out.join()
        t = random.uniform(20*0.6, 50*0.6)
        time.sleep(t)
        sign_in = threading.Thread(target=SignIn)
        sign_in.start()
        sign_in.join()
        time.sleep(random.uniform(50*0.6, 60*0.6))
    else:
        time.sleep(random.uniform(90*0.6, 120*0.6))
    t3 = threading.Thread(target=deviceOff, args=("Lab", "Door", env, 'User Activity',))
    t3.start()
    print("人员七继续工作ing...")
    time.sleep(random.uniform(30*0.6, 60*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    time.sleep(random.uniform(0.6, 0.6*15))
    random_device = random.randint(0, len(random_device_list)-1)
    t4 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t4.start()
    print("人员七继续工作ing...")
    time.sleep(random.uniform(50*0.6, 100*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t5 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t5.start()
    time.sleep(random.uniform(0.6, 0.6*15))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员七继续工作ing...")
    time.sleep(random.uniform(5*0.6, 15*0.6))
    if random.randint(0, 1) == 0:
        sign_out = threading.Thread(target=SignOut)
        sign_out.start()
        sign_out.join()
        t = random.uniform(20*0.6, 50*0.6)
        time.sleep(t)
        sign_in = threading.Thread(target=SignIn)
        sign_in.start()
        sign_in.join()
        time.sleep(random.uniform(30*0.6, 45*0.6))
    else:
        time.sleep(random.uniform(60*0.6, 90*0.6))
    print("人员七签退...")
    print(datetime.datetime.fromtimestamp(globalFrame.start_time))
    sign_out = threading.Thread(target=SignOut)
    sign_out.start()
    sign_out.join()

    t1.join()
    t2.join()
    t3.join()
    t4.join()
    t5.join()


def personEight():
    pool = []
    time.sleep(random.uniform(0.6*60*8, 0.6*60*8.9))
    print("人员八到...")
    sign_in = threading.Thread(target=SignIn)
    sign_in.start()
    sign_in.join()
    time.sleep(random.uniform(0.03, 0.05))
    check_in = threading.Thread(target=CheckIn)
    check_in.start()
    check_in.join()
    print("人员八工作ing...")
    time.sleep(random.uniform(60*0.6, 90*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    time.sleep(random.uniform(15*0.6, 30*0.6))
    water = threading.Thread(target=CatchWater)
    water.start()
    water.join()
    print("人员八午休ing...")
    time.sleep(random.uniform(90*0.6, 120*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t1 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t1.start()
    print("人员八继续工作ing...")
    time.sleep(random.uniform(40*0.6, 60*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    room = ['MeetingRoomOne', 'MeetingRoomTwo']
    if event_index == 3:
        start_time = random.uniform(40*0.6, 90*0.6)
        random_event = threading.Thread(target=random_event_list[event_index], args=(start_time, room[random.randint(0, 1)],))
        random_event.start()
        pool.append(random_event)
        if random.randint(0, 50) < 40: 
            time.sleep(start_time - 10*0.6)
            meeting = threading.Thread(target=Meeting, args=(room, ))
            meeting.start()
            meeting.join()
    else:
        time.sleep(random.uniform(80*0.6, 100*0.6))
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    time.sleep(random.uniform(0.6, 0.6*15))
    random_device = random.randint(0, len(random_device_list)-1)
    t2 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t2.start()
    print("人员八继续工作ing...")
    time.sleep(random.uniform(5*0.6, 15*0.6))
    if random.randint(0, 1) == 0:
        sign_out = threading.Thread(target=SignOut)
        sign_out.start()
        sign_out.join()
        t = random.uniform(20*0.6, 50*0.6)
        time.sleep(t)
        sign_in = threading.Thread(target=SignIn)
        sign_in.start()
        sign_in.join()
        time.sleep(random.uniform(30*0.6, 40*0.6))
    else:
        time.sleep(random.uniform(50*0.6, 100*0.6))
    restRoom = threading.Thread(target=GoRestRoom)
    restRoom.start()
    restRoom.join()
    time.sleep(random.uniform(10*0.6, 30*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t3 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t3.start()
    time.sleep(random.uniform(0.6, 0.6*15))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员八继续工作ing...")
    time.sleep(random.uniform(160*0.6, 180*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员八签退...")
    print(datetime.datetime.fromtimestamp(globalFrame.start_time))
    sign_out = threading.Thread(target=SignOut)
    sign_out.start()
    sign_out.join()

    t1.join()
    t2.join()
    t3.join()
    for item in pool:
        item.join()


def personNine():
    pool = []
    time.sleep(random.uniform(0.6*60*8.5, 0.6*60*9.2))
    print("人员九到...")
    sign_in = threading.Thread(target=SignIn)
    sign_in.start()
    sign_in.join()
    time.sleep(random.uniform(0.03, 0.05))
    check_in = threading.Thread(target=CheckIn)
    check_in.start()
    check_in.join()
    print("人员九工作ing...")
    time.sleep(random.uniform(30*0.6, 60*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    time.sleep(random.uniform(90*0.6, 120*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    room = ['MeetingRoomOne', 'MeetingRoomTwo']
    if event_index == 3:
        start_time = random.uniform(40*0.6, 90*0.6)
        random_event = threading.Thread(target=random_event_list[event_index], args=(start_time, room[random.randint(0, 1)],))
        random_event.start()
        pool.append(random_event)
        if random.randint(0, 50) < 40: 
            time.sleep(start_time - 10*0.6)
            meeting = threading.Thread(target=Meeting, args=(room, ))
            meeting.start()
            meeting.join()
    else:
        time.sleep(random.uniform(40*0.6, 90*0.6))
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员九午休ing...")
    time.sleep(random.uniform(5*0.6, 15*0.6))
    if random.randint(0, 1) == 0:
        sign_out = threading.Thread(target=SignOut)
        sign_out.start()
        sign_out.join()
        t = random.uniform(20*0.6, 50*0.6)
        time.sleep(t)
        sign_in = threading.Thread(target=SignIn)
        sign_in.start()
        sign_in.join()
        time.sleep(random.uniform(60*0.6, 70*0.6))
    else:
        time.sleep(random.uniform(90*0.6, 120*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员九继续工作ing...")
    time.sleep(random.uniform(30*0.6, 60*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    room = ['MeetingRoomOne', 'MeetingRoomTwo']
    if event_index == 3:
        start_time = random.uniform(40*0.6, 90*0.6)
        random_event = threading.Thread(target=random_event_list[event_index], args=(start_time, room[random.randint(0, 1)],))
        random_event.start()
        pool.append(random_event)
        if random.randint(0, 50) < 40: 
            time.sleep(start_time - 10*0.6)
            meeting = threading.Thread(target=Meeting, args=(room, ))
            meeting.start()
            meeting.join()
    else:
        time.sleep(random.uniform(40*0.6, 90*0.6))
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    time.sleep(random.uniform(0.6, 0.6*15))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员九继续工作ing...")
    time.sleep(random.uniform(70*0.6, 100*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t1 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t1.start()
    print("人员九继续工作ing...")
    time.sleep(random.uniform(60*0.6, 90*0.6))
    print("人员九签退...")
    print(datetime.datetime.fromtimestamp(globalFrame.start_time))
    sign_out = threading.Thread(target=SignOut)
    sign_out.start()
    sign_out.join()

    t1.join()
    for item in pool:
        item.join()


def personTen():
    pool = []
    time.sleep(random.uniform(0.6*60*8.6, 0.6*60*8.9))
    print("人员十到...")
    sign_in = threading.Thread(target=SignIn)
    sign_in.start()
    sign_in.join()
    time.sleep(random.uniform(0.03, 0.05))
    check_in = threading.Thread(target=CheckIn)
    check_in.start()
    check_in.join()
    print("人员十工作ing...")
    time.sleep(random.uniform(60*0.6, 120*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    time.sleep(random.uniform(60*0.6, 120*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员十午休ing...")
    time.sleep(random.uniform(5*0.6, 15*0.6))
    if random.randint(0, 1) == 0:
        sign_out = threading.Thread(target=SignOut)
        sign_out.start()
        sign_out.join()
        t = random.uniform(20*0.6, 50*0.6)
        time.sleep(t)
        sign_in = threading.Thread(target=SignIn)
        sign_in.start()
        sign_in.join()
        time.sleep(random.uniform(20*0.6, 30*0.6))
    else:
        time.sleep(random.uniform(40*0.6, 90*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    room = ['MeetingRoomOne', 'MeetingRoomTwo']
    if event_index == 3:
        start_time = random.uniform(40*0.6, 90*0.6)
        random_event = threading.Thread(target=random_event_list[event_index], args=(start_time, room[random.randint(0, 1)],))
        random_event.start()
        pool.append(random_event)
        if random.randint(0, 50) < 40: 
            time.sleep(start_time - 10*0.6)
            meeting = threading.Thread(target=Meeting, args=(room, ))
            meeting.start()
            meeting.join()
    else:
        time.sleep(random.uniform(40*0.6, 60*0.6))
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员十继续工作ing...")
    time.sleep(random.uniform(60*0.6, 75*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    time.sleep(random.uniform(0.6, 0.6*15))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员十继续工作ing...")
    time.sleep(random.uniform(50*0.6, 100*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t1 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t1.start()
    print("人员十继续工作ing...")
    time.sleep(random.uniform(150*0.6, 160*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("人员十签退...")
    print(datetime.datetime.fromtimestamp(globalFrame.start_time))
    sign_out = threading.Thread(target=SignOut)
    sign_out.start()
    sign_out.join()

    t1.join()
    for item in pool:
        item.join()


def weekendPersonOne():
    time.sleep(random.uniform(0.6*60*10, 0.6*60*12))
    print("到...")
    sign_in = threading.Thread(target=SignIn)
    sign_in.start()
    sign_in.join()
    print("工作ing...")
    time.sleep(random.uniform(60*0.6, 90*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    time.sleep(random.uniform(30*0.6, 50*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("午休ing...")
    time.sleep(random.uniform(5*0.6, 15*0.6))
    if random.randint(0, 1) == 0:
        sign_out = threading.Thread(target=SignOut)
        sign_out.start()
        sign_out.join()
        t = random.uniform(20*0.6, 50*0.6)
        time.sleep(t)
        sign_in = threading.Thread(target=SignIn)
        sign_in.start()
        sign_in.join()
        time.sleep(random.uniform(20*0.6, 40*0.6))
    else:
        time.sleep(random.uniform(60*0.6, 80*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    time.sleep(random.uniform(0.6*15, 0.6*45))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("继续工作ing...")
    time.sleep(random.uniform(50*0.6, 100*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t1 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t1.start()
    print("签退...")
    print(datetime.datetime.fromtimestamp(globalFrame.start_time))
    sign_out = threading.Thread(target=SignOut)
    sign_out.start()
    sign_out.join()

    t1.join()


def weekendPersonTwo():
    time.sleep(random.uniform(0.6*60*10, 0.6*60*14))
    print("到...")
    sign_in = threading.Thread(target=SignIn)
    sign_in.start()
    sign_in.join()
    print("工作ing...")
    time.sleep(random.uniform(60*0.6, 90*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    time.sleep(random.uniform(30*0.6, 50*0.6))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    time.sleep(random.uniform(5*0.6, 15*0.6))
    if random.randint(0, 1) == 0:
        sign_out = threading.Thread(target=SignOut)
        sign_out.start()
        sign_out.join()
        t = random.uniform(20*0.6, 50*0.6)
        time.sleep(t)
        sign_in = threading.Thread(target=SignIn)
        sign_in.start()
        sign_in.join()
        time.sleep(random.uniform(5*0.6, 10*0.6))
    else:
        time.sleep(random.uniform(30*0.6, 50*0.6))
    time.sleep(random.uniform(10*0.6, 15*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t1 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t1.start()
    time.sleep(random.uniform(0.6*15, 0.6*45))
    event_index = random.randint(0, len(random_event_list)-1)
    if event_index != 3:
        random_event = threading.Thread(target=random_event_list[event_index])
        random_event.start()
        random_event.join()
    print("继续工作ing...")
    time.sleep(random.uniform(5*0.6, 15*0.6))
    random_device = random.randint(0, len(random_device_list)-1)
    t2 = threading.Thread(target=random_device_list[0][random_device][0], args=(random_device_list[0][random_device][1][0],random_device_list[0][random_device][1][1], env, 'User Activity',))
    t2.start()
    print("签退...")
    print(datetime.datetime.fromtimestamp(globalFrame.start_time))
    sign_out = threading.Thread(target=SignOut)
    sign_out.start()
    sign_out.join()

    t1.join()
    t2.join()
